
#==============================================================================#
# $Id: mkexy.rb,v 1.2 2004/03/25 09:35:25 yuya Exp $
#==============================================================================#

require 'exerb/utility2'

#==============================================================================#

BEGIN {
  $exerb_pwd = Dir.pwd
}

END {
  Dir.chdir($exerb_pwd)
  if ENV['exy_zipd']
    require 'zlib'
    zipd = true
  else
    zipd = false
  end

  reject_list = [File.expand_path(__FILE__)]
  file_list   = [['script', $0, $0]] + Exerb::Utility2.loaded_features(reject_list)
  recipe_file = File.expand_path($0).sub(/(\.rbw?$|$)/i, '.exy')
  core = $0 =~ /\.rbw$/i ? "gui" : "cui"

  old_resource = nil
  old_path = nil
  old_recipe_file = ENV['old_exy'] || recipe_file
  if File.exists?(old_recipe_file)
    require 'yaml'
    oldcfg = YAML.load(File.read(old_recipe_file))
    msg = "# from old exy file"
    if oldcfg['general'] && oldcfg['general']['core'] && core != oldcfg['general']['core']
      core = oldcfg['general']['core'] + ' ' + msg
    end
    s_r = oldcfg['resource']
    if s_r && !s_r.empty?
      old_resource = ["", msg, "resource:"]
      s_r.to_yaml.split("\n")[1..-1].each do |x|
        old_resource << '  ' + x.chomp
      end
    end

    s_p = oldcfg['path']
    if s_p && !s_p.empty?
      old_path = ["", msg,  "path:"]
      s_p.to_yaml.split("\n")[1..-1].each do |x|
        old_path << '  ' + x.chomp
      end
    end
  end

  File.open(recipe_file, 'w') { |file|
    file.puts("# Generated by mkexy")
    file.puts("# on #{Time.now.strftime('%Y-%m-%d %H:%M')}")
    file.puts("")
    file.puts("general:")
    file.puts("  startup: #{$0}")
    file.puts("  core: #{core}")
    file.puts("  zipd: #{zipd}")
    if RUBY_VERSION < "1.9"
      file.puts("  kcode: #{$KCODE.downcase}")
    else
      file.puts("  kcode: none") #no KCODE in 1.9
    end
    file.puts(old_resource) if old_resource
    file.puts(old_path) if old_path
    file.puts("")
    file.puts("file:")
    file_list.each { |type, filename, filepath|
      file.puts("  #{filename}:")
      file.puts("    file: #{filepath}") if filename != filepath
      file.puts("    type: #{type}") if type != "script"
    }
  }
}

#==============================================================================#
#==============================================================================#
